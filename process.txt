==============================================
Network Setup Process using Ansible Playbooks
==============================================

There are 6 playbooks used to configure the network environment's settings.  There are 4 variable files where values are defined that are used in those playbooks.  If any changes are desired to the settings applied to the network, they should be made in the variable files.

------------------------------
Playbook listing and Summary:
------------------------------
- vlan_playbook.yml
    configures the Big-IP's vlan settings
    
- selfip_playbook.yml
    configures the Big-IP's self-ip settings
    
- routedomain_playbook.yml
    configures the Big-IP's route-domain settings
    
- vServer_playbook.yml
    configures the Big-IP's virtual server settings
    
- vAddr_playbook.yml
    configures the Big-IP's virtual address settings
    
- command_playbook.yml
    sets the ip-protocol to "any"

------------------------------------
Viariable File listing and Summary:
------------------------------------
- bigipa.yml
    holds the variables local to the first of three Big-IP's on the network
    - contains IP addresses, and self-ip external and internal designations

- bigipb.yml
    holds the variables local to the second of three Big-IP's on the network
    - contains IP addresses, and self-ip external and internal designations
    
- bigipc.yml
    holds the variables local to the third of three Big-IP's on the network
    - contains IP addresses, and self-ip external and internal designations
    
- bigip.yml
    holds all variables commonly shared between Big-IP machines.  Contains a grouping of designations as well as common settings:
    
    - port: 0
        This is how to designate that ANY port is available.  If a specific port number is given here instead of 0, ONLY that port will be available.
        
    - interface11: 1.1
    - interface12: 1.2
        Desginations for the Big-IP's interfaces
        
    - rProtocols:
        The accepted routing protocols are listed here.  By default they are set to BGP and BFD
        
    - vAddress
        The default virtual address is designated here.  Default is 172.16.20.100 //private address space - good
        
    - vAddrAvailability
        Virtual Address Availability is set by default to 'yes'.
        
    - profiles
        Profiles designations are given here.  Default is set to 'fastL4'
        
    - netmask
        The netmask is set to a 24 bit mask, or 255.255.255.0
    
---------------------------
Running the Playbooks
---------------------------
On the ansible host server, run the playbooks in the following order:

In a Command Line Interface (CLI)

* Note that after running each playbook, you should check the settings of each Big-IP to ensure you are getting exactly the results you anticipated.

  1) vlan_playbook.yml
  2) selfip_playbook.yml
  3) routedomain_playbook.yml
  4) vServer_playbook.yml
  5) vAddr_playbook.yml
  6) command_playbook.yml
  7) makeRoutingConfigFile_playbook.yml

==================================
Process for creating the playbooks
==================================

These playbooks were made from a set of data given for a particular network configuration.

The data was derived from a testing environment.  

This data was viewed using the TMSH or Traffic Management Shell, developed by F5.

All aspects of the network can be configured differently if the user supplies different values in 
the variable files.  

TRAFFIC MANAGEMENT SHELL (TMSH)
-------------------------------

F5 developed tmsh to allow complete access to all advanced features of F5 devices. Using tmsh you 
can configure and manage the system from the command line. You can also configure BIG-IP to manage
local and global traffic, as well as view system performance data.

The specific commands used to view the data needed for creating the playbooks were:

If running commands from BASH:
tmsh list net vlan
tmsh list net self-ip
tmsh list net route-domain
tmsh list ltm virtual
tmsh list ltm virtual-address

or type in 'tmsh' at the BASH prompt to enter the shell and use all the commands as above without 
the tmsh, i.e. 'list net vlan'.

to exit the TMSH, type 'exit'

These commands will display the current configuration for each aspect of the network and allow
verification as to whether all the settings are correct.  

===================================================================================================

---------------------------
Modifying the Configuration
---------------------------

The configuration can be altered from that specified in the provided variable files.  All Ansible
playbooks are designed to be independent of hard-coded values.  They are all referencial to either
a group_var file or a specific host_var file.

Values specific to a machine will be modified in the host_var files.  
Values common across the network are in the group_var file.

-------------------------
group_var file: bigip.yml
-------------------------
These variables are common between the hosts.  If a device in the network needs a different
configuration from the rest, then the field will have to be moved from the group_var file
bigip.yml.

---------------------------------------------------------------------------------------------------
# group vars
user: !vault |
          $ANSIBLE_VAULT;1.1;AES256
          33626263363766393539626263353834396461653233643430373834353337653333373863623265
          6534373932646538323431626132633866343237643538620a343739343766653462653937313061
          66316236386432323863333263643836333861316333613137373939383265353736363861373932
          3663323839613739340a383266373966663161633763353262613638663638623865383530633239
          6361
password: !vault |
          $ANSIBLE_VAULT;1.1;AES256
          64613237376339323931653762366261336464663735643034613561343437326361623939623661
          6166313638356231323938633636653565316538666239340a633662396433313039363534633666
          66643632313065326562376563656530653463643561623530373533386633333231383664653839
          3132643130326562360a616131393764613865373366653166343438303334326661383431616430
          6464
validate_certs: No
port: 0
vlanExtName: External
vlanIntName: Internal
interface11: 1.1
interface12: 1.2
rProtocols:
  - BFD
  - BGP
id: 0
vAddress: #.#.#.#
vAddressName: VS-80
vAddrAvailability: yes
profiles: fastL4
netmask: 255.255.255.0
tagExt: 20
tagInt: 30
---------------------------------------------------------------------------------------------------

When each ansible playbook is run, its invoked with --ask-vault-pass.  This is used to decrypt the 
coded values in this file.

-------------------------------------------------
host_var file: bigipa.yml, bigipb.yml, bigipc.yml
-------------------------------------------------
These are particular to each host device.

---------------------------------------------------------------------------------------------------
address: 10.1.1.7
ansible_host: 10.1.1.7 
selfAddrExt: 10.1.20.20
selfAddrInt: 10.1.30.20
---------------------------------------------------------------------------------------------------

===================================================================================================

==============================
REPLACING THE ENCRYPTED VALUES
==============================

At some point the user may want to replace the existing password with one of their own choosing.  

This can be done from the command line using the ansible-vault encrypt string commands as shown:

ENCRYPT COMMAND
---------------
ansible-vault encrypt_string -n <key> <value>

ansible-vault encrypt_string -n user admin --output=./test.yml
ansible-vault encrypt_string -n password admin --output=./test.yml
